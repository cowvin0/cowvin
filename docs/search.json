[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Rpackage authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriel Pereira. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pereira G (2022). cowvin: List comprehension em R utilizando loop . R package version 0.1.0, https://github.com/gabrielpereira12345/cowvin.","code":"@Manual{,   title = {cowvin: List comprehension em R utilizando loop for},   author = {Gabriel Pereira},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/gabrielpereira12345/cowvin}, }"},{"path":"/index.html","id":"cowvin","dir":"","previous_headings":"","what":"List comprehension em R utilizando loop for","title":"List comprehension em R utilizando loop for","text":"O pacote cowvin implementa list comprehension em R utilizando loop.","code":""},{"path":"/index.html","id":"instalação-do-cowvin","dir":"","previous_headings":"","what":"Instalação do cowvin","title":"List comprehension em R utilizando loop for","text":"Como instalar o pacote cowvin:","code":"library(remotes) remotes::install_github(\"gabrielpereira12345/cowvin\")"},{"path":"/index.html","id":"exemplo","dir":"","previous_headings":"","what":"Exemplo","title":"List comprehension em R utilizando loop for","text":"Utilizando list_comprehension para tomar o quadrado de números pares: Split em strings","code":"library(cowvin)  list_comprehension(for(i in 1:10) if(i %% 2  == 0) i*i) #> [[1]] #> [1] 4 #>  #> [[2]] #> [1] 16 #>  #> [[3]] #> [1] 36 #>  #> [[4]] #> [1] 64 #>  #> [[5]] #> [1] 100 list_comprehension(for(i in c(\"bata}ta\", \"cano}ura\", \"cara}melo\")) strsplit(i, \"}\")[[1]][[1]]) #> [[1]] #> [1] \"bata\" #>  #> [[2]] #> [1] \"cano\" #>  #> [[3]] #> [1] \"cara\""},{"path":"/reference/list_comprehension.html","id":null,"dir":"Reference","previous_headings":"","what":"Pacote que implementa list comprehension utilizando for loop — list_comprehension","title":"Pacote que implementa list comprehension utilizando for loop — list_comprehension","text":"Implementa list comprehension apenas para casos simples utilizando loop.","code":""},{"path":"/reference/list_comprehension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pacote que implementa list comprehension utilizando for loop — list_comprehension","text":"","code":"list_comprehension(expr)"},{"path":"/reference/list_comprehension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pacote que implementa list comprehension utilizando for loop — list_comprehension","text":"expr expressão de loop","code":""},{"path":"/reference/list_comprehension.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pacote que implementa list comprehension utilizando for loop — list_comprehension","text":"Gabriel Pereira","code":""},{"path":"/reference/list_comprehension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pacote que implementa list comprehension utilizando for loop — list_comprehension","text":"","code":"# cria uma lista com o quadrado dos valores ímpares list_comprehension(for(i in 1:10) if(i %% 2 != 0) i^2) #> [[1]] #> [1] 1 #>  #> [[2]] #> [1] 9 #>  #> [[3]] #> [1] 25 #>  #> [[4]] #> [1] 49 #>  #> [[5]] #> [1] 81 #>   # faz um split e toma tudo aquilo que aparece antes da chave list_comprehension(for(i in c(\"bata}ta\", \"ceno}ura\", \"laran}ja\")) strsplit(i, \"}\")[[1]][[1]]) #> [[1]] #> [1] \"bata\" #>  #> [[2]] #> [1] \"ceno\" #>  #> [[3]] #> [1] \"laran\" #>"}]
